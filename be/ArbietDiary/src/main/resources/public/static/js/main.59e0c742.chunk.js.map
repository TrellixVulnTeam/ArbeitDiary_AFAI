{"version":3,"sources":["module/Calendar/actions.ts","module/Calendar/reducer.ts","module/User/actions.ts","module/User/reducer.ts","api/UserApi.tsx","api/CheckToken.tsx","components/Header.tsx","components/Introduce.tsx","components/MkProject.tsx","containers/Index.tsx","containers/Login.tsx","components/CheckEmailModal.tsx","containers/Regist.tsx","containers/OldProject.tsx","components/Calendar.tsx","components/FixedSchedule.tsx","components/ModalJoinProject.tsx","components/UserList.tsx","components/Record.tsx","components/Schedule.tsx","containers/DayDetail.tsx","containers/Project.tsx","containers/NewProject.tsx","containers/Emaildone.tsx","containers/JoinProject.tsx","containers/FindId.tsx","containers/FindPassword.tsx","containers/ResetPassword.tsx","App.tsx","reportWebVitals.ts","module/index.ts","index.tsx"],"names":["addDetail","type","payload","date","text","name","time","userId","toggleFixedSchedule","dayId","index","getCalendarinfo","calendarinfo","CalenderInfo","createReducer","calendarId","projectId","projectName","userList","fixedtimes","worktime","dates","dateId","dayIssues","users","state","action","map","calendar","concat","filter","dayissue","user","slice","day","get_userinfo","userinfo","Userinfo","userName","phone","projects","joinId","done","project","api","getUserinfoApi","token","dispatch","a","axios","method","url","headers","Authorization","then","response","data","console","log","params","authorization","localStorage","setItem","memberRefreshToken","body","id","findidapi","history","useHistory","push","alert","PostApi","getCalendarApi","sendfixedscheduleapi","calendarupdateapi","CheckTokenMoveHome","getItem","checkEffectiveToken","clear","CheckToken","Header","useState","ScrollY","setScrollY","ScrollActive","setScrollActive","handleScroll","window","pageYOffset","useEffect","addEventListener","removeEventListener","className","to","onClick","go","Introduce","src","MkProject","Index","useDispatch","Login","rel","href","integrity","crossOrigin","onSubmit","e","preventDefault","UserApi","target","email","value","userPassword","password","htmlFor","placeholder","required","autoFocus","CheckEmailModal","visible","onCancel","event","stopPropagation","Regist","setPassword","confirmPassword","setConfirmPassword","setvisible","correctpassword","setcorrectpassword","passwordType","uncorrectstyle","border","commentpassword","display","test","RegistUserApi","userPhone","onChange","style","Projecttitle","ongetCalendarApi","OldProject","useSelector","key","Calendar","onConfirm","onConfirmDay","constproject","trueUserList","moment","getMoment","setMoment","today","firstWeek","clone","startOf","week","lastWeek","endOf","subtract","format","add","result","Array","fill","days","workflag","truename","error","daycheck","calendarArr","FixedSchedule","FixedSchedulevisible","setFixedSchedulevisible","useLocation","search","hours","i","String","minutes","times","hour","minute","onSendfixedschedule","FixedScheduletime","worktimes","worktimelst","split","dragflag","setdragflag","draglst","setdraglst","background","onMouseDown","onMouseUp","onMouseEnter","toUpperCase","ModalJoinProject","onCancelJoinModal","UserList","projectRole","currentUserId","onActiveJoinModal","setuserId","User","onclickUser","toggleName","checkMaster","classNames","checkBoxDone","userTextDone","confirm","targetId","undefined","Record","selectedDay","saveflag","setsaveflag","Date","getDay","currentdate","replace","issues","shallowEqual","currenttime","getHours","getMinutes","onsubmitdetail","issue","removeDetail","DayIssue","Schedule","currentuserList","exceptuserList","includes","finduserId","UserShedule","username","onclicktime","onremoveScheduleUser","length","adduser","list","autoComplete","DayDetail","Project","JoinModalvisible","setJoinModalvisible","setselectedDay","onSaveCalendar","NewProject","makeNewProject","Name","catch","Emaildone","Emailrequestapi","JoinProject","joinProject","success","code","FindId","IdList","setIdList","IdlistModal","FindPassword","findpasswordapi","ResetPassword","location","resetpasswordapi","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"spBA+BaA,EAAY,SAAC,GAAD,MAME,CACzBC,KA1BwB,sBA2BxBC,QAAS,CACPC,KATqB,EACvBA,KASEC,KAVqB,EAEvBA,KASEC,KAXqB,EAGvBA,KASEC,KAZqB,EAIvBA,KASEC,OAbqB,EAKvBA,UA6DWC,EAAsB,SAAC,GAAD,MAIE,CACnCP,KArFmC,iCAsFnCC,QAAS,CAAEK,OANsB,EACjCA,OAKmBE,MANc,EAEjCA,MAI0BC,MANO,EAGjCA,SAMWC,EAAkB,SAACC,GAAD,MAAiC,CAC9DX,KAzF8B,4BA0F9BC,QAASU,IC6XIC,EArIMC,wBAvVe,CAClC,CACEC,WAAY,IACZC,UAAW,KACXC,YAAa,8CACbC,SAAU,CACR,CACEX,OAAQ,yBACRF,KAAM,qBACNc,WAAY,CACV,CACEV,MAAO,SACPW,SAAU,oDAEZ,CACEX,MAAO,UACPW,SAAU,oDAEZ,CACEX,MAAO,YACPW,SAAU,oDAEZ,CACEX,MAAO,WACPW,SAAU,oDAEZ,CACEX,MAAO,SACPW,SAAU,oDAEZ,CACEX,MAAO,WACPW,SAAU,oDAEZ,CACEX,MAAO,SACPW,SAAU,sDAIhB,CACEb,OAAQ,sBACRF,KAAM,qBACNc,WAAY,CACV,CACEV,MAAO,SACPW,SAAU,oDAEZ,CACEX,MAAO,UACPW,SAAU,oDAEZ,CACEX,MAAO,YACPW,SAAU,oDAEZ,CACEX,MAAO,WACPW,SAAU,oDAEZ,CACEX,MAAO,SACPW,SAAU,oDAEZ,CACEX,MAAO,WACPW,SAAU,oDAEZ,CACEX,MAAO,SACPW,SAAU,sDAIhB,CACEb,OAAQ,kBACRF,KAAM,qBACNc,WAAY,CACV,CACEV,MAAO,SACPW,SAAU,oDAEZ,CACEX,MAAO,UACPW,SAAU,oDAEZ,CACEX,MAAO,YACPW,SAAU,oDAEZ,CACEX,MAAO,WACPW,SAAU,oDAEZ,CACEX,MAAO,SACPW,SAAU,oDAEZ,CACEX,MAAO,WACPW,SAAU,oDAEZ,CACEX,MAAO,SACPW,SAAU,uDAKlBC,MAAO,CACL,CACElB,KAAM,SACNmB,OAAQ,MACRC,UAAW,CACT,CACElB,KAAM,qBACND,KAAM,iCACNE,KAAM,QACNC,OAAQ,0BAEV,CACEF,KAAM,qBACND,KAAM,QACNE,KAAM,QACNC,OAAQ,0BAEV,CACEF,KAAM,qBACND,KAAM,eACNE,KAAM,QACNC,OAAQ,oBAGZE,MAAO,WACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,SACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,SACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,UACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,YACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,WACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,SACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,WACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,SACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,SACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,UACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,YACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,WACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,SACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,WACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,SACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,SACPe,MAAO,IAET,CACErB,KAAM,SACNmB,OAAQ,MACRC,UAAW,GACXd,MAAO,UACPe,MAAO,IAET,CACErB,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","file":"static/js/main.59e0c742.chunk.js","sourcesContent":["import {\r\n  addDetailPropsType,\r\n  removeDetailPropsType,\r\n  toggleDetailPropsType,\r\n  addScheduleUserPropsType,\r\n  removeScheduleUserPropsType,\r\n  toggleFixedSchedulePropsType,\r\n  CalenderType,\r\n} from \"./types\";\r\n\r\nexport const TEST = \"Calender/TEST\" as const;\r\nexport const ADD_DATE = \"Calendar/ADD_DATE\" as const;\r\nexport const ADD_DETAIL = \"Calendar/ADD_DETAIL\" as const;\r\nexport const REMOVE_DETAIL = \"Calendar/REMOVE_DETAIL\" as const;\r\nexport const TOGGLE_DETAIL = \"Calendar/TOGGLE_DETAIL\" as const;\r\nexport const ADD_SCHEDULE_USER = \"Calendar/ADD_SCHEDULE_USER\" as const;\r\nexport const REMOVE_SCHEDULE_USER = \"Calendar/REMOVE_SCHEDULE_USER\" as const;\r\nexport const TOGGLE_FIXED_SCHEDULE = \"Calendar/TOGGLE_FIXED_SCHEDULE\" as const;\r\nexport const GET_CALENDARINFO = \"Calendar/GET_CALENDARINFO\" as const;\r\n//export const getUser = deprecated.createStandardAction(GET_USER)();\r\n\r\nexport const onTest = (id: string) => ({\r\n  type: TEST,\r\n  payload: id,\r\n});\r\n\r\nexport const addDate = (date: string) => ({\r\n  type: ADD_DATE,\r\n  payload: date,\r\n});\r\n\r\nexport const addDetail = ({\r\n  date,\r\n  text,\r\n  name,\r\n  time,\r\n  userId,\r\n}: addDetailPropsType) => ({\r\n  type: ADD_DETAIL,\r\n  payload: {\r\n    date,\r\n    text,\r\n    name,\r\n    time,\r\n    userId,\r\n  },\r\n});\r\n\r\nexport const removeDetail = ({ name, text }: removeDetailPropsType) => ({\r\n  type: REMOVE_DETAIL,\r\n  payload: {\r\n    name,\r\n    text,\r\n  },\r\n});\r\n\r\nexport const toggleDetail = ({\r\n  date,\r\n  index,\r\n  name,\r\n  userId,\r\n}: toggleDetailPropsType) => ({\r\n  type: TOGGLE_DETAIL,\r\n  payload: {\r\n    date,\r\n    index,\r\n    name,\r\n    userId,\r\n  },\r\n});\r\n\r\nexport const addScheduleUser = ({\r\n  date,\r\n  name,\r\n  userId,\r\n}: addScheduleUserPropsType) => ({\r\n  type: ADD_SCHEDULE_USER,\r\n  payload: {\r\n    date,\r\n    name,\r\n    userId,\r\n  },\r\n});\r\n\r\nexport const removeScheduleUser = ({\r\n  date,\r\n  name,\r\n  userId,\r\n}: removeScheduleUserPropsType) => ({\r\n  type: REMOVE_SCHEDULE_USER,\r\n  payload: {\r\n    date,\r\n    name,\r\n    userId,\r\n  },\r\n});\r\n\r\nexport const toggleFixedSchedule = ({\r\n  userId,\r\n  dayId,\r\n  index,\r\n}: toggleFixedSchedulePropsType) => ({\r\n  type: TOGGLE_FIXED_SCHEDULE,\r\n  payload: { userId, dayId, index },\r\n});\r\n\r\nexport const getCalendarinfo = (calendarinfo: CalenderType) => ({\r\n  type: GET_CALENDARINFO,\r\n  payload: calendarinfo,\r\n});\r\n","import { createReducer } from \"typesafe-actions\";\r\nimport { CalenderAction, CalendersType } from \"./types\";\r\nimport {\r\n  TOGGLE_DETAIL,\r\n  REMOVE_DETAIL,\r\n  ADD_DATE,\r\n  ADD_DETAIL,\r\n  ADD_SCHEDULE_USER,\r\n  REMOVE_SCHEDULE_USER,\r\n  TOGGLE_FIXED_SCHEDULE,\r\n  GET_CALENDARINFO,\r\n} from \"./actions\";\r\n\r\nconst initialState: CalendersType = [\r\n  {\r\n    calendarId: \"6\",\r\n    projectId: \"13\",\r\n    projectName: \"맘스터치 오류점\",\r\n    userList: [\r\n      {\r\n        userId: \"parkseyeon99@naver.com\",\r\n        name: \"박세연\",\r\n        fixedtimes: [\r\n          {\r\n            dayId: \"MONDAY\",\r\n            worktime: \"000000000000000000011111111000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"TUESDAY\",\r\n            worktime: \"000000000000000000000000000000001111111100000000\",\r\n          },\r\n          {\r\n            dayId: \"WEDNESDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"THURSDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"FRIDAY\",\r\n            worktime: \"000000001111111100000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"SATURDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"SUNDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        userId: \"supersfel@naver.com\",\r\n        name: \"정민규\",\r\n        fixedtimes: [\r\n          {\r\n            dayId: \"MONDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"TUESDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"WEDNESDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"THURSDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"FRIDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"SATURDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"SUNDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        userId: \"user8@naver.com\",\r\n        name: \"고민수\",\r\n        fixedtimes: [\r\n          {\r\n            dayId: \"MONDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"TUESDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"WEDNESDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"THURSDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"FRIDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"SATURDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n          {\r\n            dayId: \"SUNDAY\",\r\n            worktime: \"000000000000000000000000000000000000000000000000\",\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    dates: [\r\n      {\r\n        date: \"220212\",\r\n        dateId: \"155\",\r\n        dayIssues: [\r\n          {\r\n            name: \"박세연\",\r\n            text: \"안녕하세요\",\r\n            time: \"14:20\",\r\n            userId: \"parkseyeon99@naver.com\",\r\n          },\r\n          {\r\n            name: \"박세연\",\r\n            text: \"Hello\",\r\n            time: \"14:20\",\r\n            userId: \"parkseyeon99@naver.com\",\r\n          },\r\n          {\r\n            name: \"고철수\",\r\n            text: \"얍얍\",\r\n            time: \"14:21\",\r\n            userId: \"user3@naver.com\",\r\n          },\r\n        ],\r\n        dayId: \"SATURDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220213\",\r\n        dateId: \"156\",\r\n        dayIssues: [],\r\n        dayId: \"SUNDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220214\",\r\n        dateId: \"157\",\r\n        dayIssues: [],\r\n        dayId: \"MONDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220215\",\r\n        dateId: \"158\",\r\n        dayIssues: [],\r\n        dayId: \"TUESDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220216\",\r\n        dateId: \"159\",\r\n        dayIssues: [],\r\n        dayId: \"WEDNESDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220217\",\r\n        dateId: \"160\",\r\n        dayIssues: [],\r\n        dayId: \"THURSDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220218\",\r\n        dateId: \"161\",\r\n        dayIssues: [],\r\n        dayId: \"FRIDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220219\",\r\n        dateId: \"162\",\r\n        dayIssues: [],\r\n        dayId: \"SATURDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220220\",\r\n        dateId: \"163\",\r\n        dayIssues: [],\r\n        dayId: \"SUNDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220221\",\r\n        dateId: \"164\",\r\n        dayIssues: [],\r\n        dayId: \"MONDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220222\",\r\n        dateId: \"165\",\r\n        dayIssues: [],\r\n        dayId: \"TUESDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220223\",\r\n        dateId: \"166\",\r\n        dayIssues: [],\r\n        dayId: \"WEDNESDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220224\",\r\n        dateId: \"167\",\r\n        dayIssues: [],\r\n        dayId: \"THURSDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220225\",\r\n        dateId: \"168\",\r\n        dayIssues: [],\r\n        dayId: \"FRIDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220226\",\r\n        dateId: \"169\",\r\n        dayIssues: [],\r\n        dayId: \"SATURDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220227\",\r\n        dateId: \"170\",\r\n        dayIssues: [],\r\n        dayId: \"SUNDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220228\",\r\n        dateId: \"171\",\r\n        dayIssues: [],\r\n        dayId: \"MONDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220301\",\r\n        dateId: \"172\",\r\n        dayIssues: [],\r\n        dayId: \"TUESDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220302\",\r\n        dateId: \"173\",\r\n        dayIssues: [],\r\n        dayId: \"WEDNESDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220303\",\r\n        dateId: \"174\",\r\n        dayIssues: [],\r\n        dayId: \"THURSDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220304\",\r\n        dateId: \"175\",\r\n        dayIssues: [],\r\n        dayId: \"FRIDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220305\",\r\n        dateId: \"176\",\r\n        dayIssues: [],\r\n        dayId: \"SATURDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220306\",\r\n        dateId: \"177\",\r\n        dayIssues: [],\r\n        dayId: \"SUNDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220307\",\r\n        dateId: \"178\",\r\n        dayIssues: [],\r\n        dayId: \"MONDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220308\",\r\n        dateId: \"179\",\r\n        dayIssues: [],\r\n        dayId: \"TUESDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220309\",\r\n        dateId: \"180\",\r\n        dayIssues: [],\r\n        dayId: \"WEDNESDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220310\",\r\n        dateId: \"181\",\r\n        dayIssues: [],\r\n        dayId: \"THURSDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220311\",\r\n        dateId: \"182\",\r\n        dayIssues: [],\r\n        dayId: \"FRIDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220312\",\r\n        dateId: \"183\",\r\n        dayIssues: [],\r\n        dayId: \"SATURDAY\",\r\n        users: [],\r\n      },\r\n      {\r\n        date: \"220313\",\r\n        dateId: \"184\",\r\n        dayIssues: [],\r\n        dayId: \"SUNDAY\",\r\n        users: [],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst CalenderInfo = createReducer<CalendersType, CalenderAction>(\r\n  initialState,\r\n  {\r\n    [ADD_DATE]: (state, action) =>\r\n      state.map((calendar) => ({\r\n        ...calendar,\r\n        dates: calendar.dates.concat({\r\n          date: action.payload,\r\n          dateId: \"3\",\r\n          dayId: \"SATURDAY\",\r\n          users: [],\r\n          dayIssues: [],\r\n        }),\r\n      })),\r\n    [ADD_DETAIL]: (state, action) =>\r\n      state.map((calendar) => ({\r\n        ...calendar,\r\n        dates: calendar.dates.map((date) => ({\r\n          ...date,\r\n          dayIssues:\r\n            date.date === action.payload.date\r\n              ? date.dayIssues.concat({\r\n                  name: action.payload.name,\r\n                  time: action.payload.time,\r\n                  text: action.payload.text,\r\n                  userId: action.payload.userId,\r\n                })\r\n              : date.dayIssues,\r\n        })),\r\n      })),\r\n    [REMOVE_DETAIL]: (state, action) =>\r\n      state.map((calendar) => ({\r\n        ...calendar,\r\n        dates: calendar.dates.map((date) => ({\r\n          ...date,\r\n          dayIssues: date.dayIssues.filter(\r\n            (dayissue) =>\r\n              dayissue.name !== action.payload.name ||\r\n              dayissue.text !== action.payload.text\r\n          ),\r\n        })),\r\n      })),\r\n    [TOGGLE_DETAIL]: (state, action) =>\r\n      state.map((calendar) => ({\r\n        ...calendar,\r\n        dates: calendar.dates.map((date) => ({\r\n          ...date,\r\n          users:\r\n            date.date === action.payload.date\r\n              ? date.users.map((user) =>\r\n                  user.userId === action.payload.userId\r\n                    ? user.worktime[action.payload.index] === \"1\"\r\n                      ? {\r\n                          ...user,\r\n                          worktime:\r\n                            user.worktime.slice(0, action.payload.index) +\r\n                            \"0\" +\r\n                            user.worktime.slice(action.payload.index + 1),\r\n                        }\r\n                      : {\r\n                          ...user,\r\n                          worktime:\r\n                            user.worktime.slice(0, action.payload.index) +\r\n                            \"1\" +\r\n                            user.worktime.slice(action.payload.index + 1),\r\n                        }\r\n                    : { ...user }\r\n                )\r\n              : date.users,\r\n        })),\r\n      })),\r\n    [ADD_SCHEDULE_USER]: (state, action) =>\r\n      state.map((calendar) => ({\r\n        ...calendar,\r\n        dates: calendar.dates.map((date) => ({\r\n          ...date,\r\n          users:\r\n            date.date === action.payload.date\r\n              ? date.users.concat({\r\n                  name: action.payload.name,\r\n                  userId: action.payload.userId,\r\n                  worktime: \"000000000000000000000000000000000000000000000000\",\r\n                })\r\n              : date.users,\r\n        })),\r\n      })),\r\n    [REMOVE_SCHEDULE_USER]: (state, action) =>\r\n      state.map((calendar) => ({\r\n        ...calendar,\r\n        dates: calendar.dates.map((date) => ({\r\n          ...date,\r\n          users:\r\n            date.date === action.payload.date\r\n              ? date.users.filter(\r\n                  (user) => user.userId !== action.payload.userId\r\n                )\r\n              : date.users,\r\n        })),\r\n      })),\r\n    [TOGGLE_FIXED_SCHEDULE]: (state, action) =>\r\n      state.map((calendar) => ({\r\n        ...calendar,\r\n        userList: calendar.userList.map((user) =>\r\n          user.userId === action.payload.userId\r\n            ? {\r\n                ...user,\r\n                fixedtimes: user.fixedtimes.map((day) =>\r\n                  day.dayId === action.payload.dayId\r\n                    ? day.worktime[action.payload.index] === \"1\"\r\n                      ? {\r\n                          ...day,\r\n                          worktime:\r\n                            day.worktime.slice(0, action.payload.index) +\r\n                            \"0\" +\r\n                            day.worktime.slice(action.payload.index + 1),\r\n                        }\r\n                      : {\r\n                          ...day,\r\n                          worktime:\r\n                            day.worktime.slice(0, action.payload.index) +\r\n                            \"1\" +\r\n                            day.worktime.slice(action.payload.index + 1),\r\n                        }\r\n                    : { ...day }\r\n                ),\r\n              }\r\n            : { ...user }\r\n        ),\r\n      })),\r\n    [GET_CALENDARINFO]: (state, action) => state.map(() => action.payload),\r\n  }\r\n);\r\n\r\nexport default CalenderInfo;\r\n","//import { deprecated } from \"typesafe-actions\";\r\n\r\nimport { Usertype } from \".\";\r\n\r\nexport const ADD_PROJECT = \"User/ADD_PROJECT\" as const;\r\nexport const TOGGLE_NAME = \"User/TOGGLE_NAME\" as const;\r\nexport const GET_USERINFO = \"User/GET_USERINFO\" as const;\r\n//export const getUser = deprecated.createStandardAction(GET_USER)();\r\n\r\nexport const addProject = (id: string) => ({\r\n  type: ADD_PROJECT,\r\n  payload: id,\r\n});\r\n\r\nexport const toggleName = (name: string, projectId: string) => ({\r\n  type: TOGGLE_NAME,\r\n  name,\r\n  projectId,\r\n});\r\n\r\nexport const get_userinfo = (userinfo: Usertype) => ({\r\n  type: GET_USERINFO,\r\n  payload: userinfo,\r\n});\r\n","import { createReducer } from \"typesafe-actions\";\r\nimport { ADD_PROJECT, TOGGLE_NAME, GET_USERINFO } from \"./actions\";\r\nimport { UserAction, User } from \"./types\";\r\n\r\nconst initialState: User = [\r\n  {\r\n    userId: \"1\",\r\n    userName: \"정민규\",\r\n    phone: \"01022348115\",\r\n    projects: [\r\n      {\r\n        projectId: \"1\",\r\n        joinId: \"\",\r\n        projectName: \"서브웨이 연수점\",\r\n        calendarId: \"1\",\r\n\r\n        userList: [\r\n          { userName: \"정민규\", userId: \"supersfel@naver.com\", done: false },\r\n          {\r\n            userName: \"박세연\",\r\n            userId: \"parkseyeon99@naver.com\",\r\n            done: true,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        projectId: \"2\",\r\n        projectName: \"맘스터치 개봉점\",\r\n        calendarId: \"2\",\r\n        userList: [\r\n          { userName: \"짭민규\", userId: \"supersfel@naver.com\", done: true },\r\n          {\r\n            userName: \"짭세연\",\r\n            userId: \"parkseyeon99@naver.com\",\r\n            done: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nconst Userinfo = createReducer<User, UserAction>(initialState, {\r\n  [ADD_PROJECT]: (state, action) =>\r\n    state.map((user) => ({\r\n      ...user,\r\n      projects: user.projects.concat({\r\n        projectId: \"3\",\r\n        projectName: action.payload,\r\n        calendarId: \"3\",\r\n        userList: [\r\n          {\r\n            userName: user.userName,\r\n            userId: \"supersfel@naver.com\",\r\n            done: true,\r\n          },\r\n        ],\r\n      }),\r\n    })),\r\n  [TOGGLE_NAME]: (state, action) =>\r\n    state.map((user) => ({\r\n      ...user,\r\n      projects: user.projects.map((project) =>\r\n        project.projectId === action.projectId\r\n          ? {\r\n              ...project,\r\n              userList: project.userList.map((user) =>\r\n                user.userName === action.name\r\n                  ? {\r\n                      ...user,\r\n                      done: !user.done,\r\n                    }\r\n                  : {\r\n                      ...user,\r\n                    }\r\n              ),\r\n            }\r\n          : { ...project }\r\n      ),\r\n    })),\r\n  [GET_USERINFO]: (state, action) => state.map((user) => action.payload),\r\n});\r\n\r\nexport default Userinfo;\r\n","import axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getCalendarinfo } from \"../module/Calendar\";\r\nimport { get_userinfo, Usertype } from \"../module/User\";\r\n\r\n// export const api = \"http://localhost:8080\";\r\nexport const api = \"http://43.200.142.61:80\";\r\n\r\ntype UserApiprops = {\r\n  userId: string;\r\n  userPassword: string;\r\n};\r\n\r\ntype RegistApiprops = {\r\n  userId: string;\r\n  userPassword: string;\r\n  userName: string;\r\n  userPhone: string;\r\n};\r\n\r\ntype EmailRequestApiprops = {\r\n  id: string;\r\n};\r\n\r\nexport async function getUserinfoApi(token: any, dispatch: any) {\r\n  if (token !== null) {\r\n    try {\r\n      await axios({\r\n        method: \"get\",\r\n        url: `${api}/api/oldproject`,\r\n        headers: {\r\n          'Accept': \"application/json\", //prettier-ignore\r\n          'Content-Type': \"application/json\", //prettier-ignore\r\n          Authorization: token,\r\n        },\r\n      }).then((response) => {\r\n        dispatch(get_userinfo(response.data));\r\n      });\r\n    } catch (e) {\r\n      console.log(\"get getUserinfoApi error!!\");\r\n      return false;\r\n    }\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport async function UserApi(params: UserApiprops) {\r\n  try {\r\n    await axios({\r\n      method: \"post\",\r\n      url: `${api}/api/login`,\r\n      headers: {\r\n        'Accept': \"application/json\", //prettier-ignore\r\n        'Content-Type': \"application/json\", //prettier-ignore\r\n      },\r\n      data: params,\r\n    }).then((response) => {\r\n      const { authorization } = response.headers;\r\n      localStorage.setItem(\"token\", authorization);\r\n      console.log(response.data);\r\n    });\r\n  } catch (e) {\r\n    console.log(\"get UserApi error!!\");\r\n  }\r\n}\r\n\r\nexport async function RegistUserApi(params: RegistApiprops) {\r\n  try {\r\n    await axios({\r\n      method: \"post\",\r\n      url: `${api}/api/userRegist`,\r\n      headers: {\r\n        'Accept': \"application/json\", //prettier-ignore\r\n        'Content-Type': \"application/json\", //prettier-ignore\r\n      },\r\n      data: params,\r\n    }).then((response) => {\r\n      const { memberRefreshToken } = response.data;\r\n      console.log(memberRefreshToken);\r\n      localStorage.setItem(\"token\", memberRefreshToken);\r\n      console.log(response.data);\r\n    });\r\n  } catch (e) {}\r\n}\r\n\r\nexport async function findpasswordapi(params: any) {\r\n  try {\r\n    await axios({\r\n      method: \"post\",\r\n      url: `${api}/api/find/password`,\r\n      headers: {\r\n        'Accept': \"application/json\", //prettier-ignore\r\n        'Content-Type': \"application/json\", //prettier-ignore\r\n      },\r\n      data: params,\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n    });\r\n  } catch (e) {\r\n    console.log(\"error in findpasswordapi\");\r\n  }\r\n}\r\n\r\nexport async function resetpasswordapi(body: any, id: string) {\r\n  try {\r\n    await axios({\r\n      method: \"post\",\r\n      url: `${api}/api/reset/password`,\r\n      headers: {\r\n        'Accept': \"application/json\", //prettier-ignore\r\n        'Content-Type': \"application/json\", //prettier-ignore\r\n      },\r\n      data: body,\r\n      params: {\r\n        id,\r\n      },\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n    });\r\n  } catch (e) {\r\n    console.log(\"error in resetpasswordapi\");\r\n  }\r\n}\r\n\r\nexport async function findidapi(body: any) {\r\n  let response: never[] = [];\r\n  try {\r\n    response = await axios({\r\n      method: \"post\",\r\n      url: `${api}/api/find/userid`,\r\n      headers: {\r\n        'Accept': \"application/json\", //prettier-ignore\r\n        'Content-Type': \"application/json\", //prettier-ignore\r\n      },\r\n      data: body,\r\n    }).then((response) => {\r\n      return response.data;\r\n    });\r\n  } catch (e) {\r\n    console.log(\"error in resetpasswordapi\");\r\n  }\r\n  return response;\r\n}\r\n\r\nexport async function Emailrequestapi(params: EmailRequestApiprops) {\r\n  const history = useHistory();\r\n\r\n  try {\r\n    await axios({\r\n      method: \"post\",\r\n      url: `${api}/api/emailAuth`,\r\n      headers: {\r\n        'Accept': \"application/json\", //prettier-ignore\r\n        'Content-Type': \"application/json\", //prettier-ignore\r\n      },\r\n      data: params,\r\n    }).then((response) => {\r\n      if (response.data) {\r\n        history.push(\"/\");\r\n      } else {\r\n        alert(\"올바르지 않은 인증입니다.\");\r\n      }\r\n    });\r\n  } catch (e) {\r\n    alert(\"올바르지 않은 인증입니다.\");\r\n    history.push(\"/\");\r\n  }\r\n}\r\n\r\nexport async function PostApi(url: string, token: string, params: any) {\r\n  try {\r\n    await axios({\r\n      method: \"post\",\r\n      url,\r\n      headers: {\r\n        'Accept': \"application/json\", //prettier-ignore\r\n        'Content-Type': \"application/json\", //prettier-ignore\r\n        Authorization: token,\r\n      },\r\n      data: params,\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n      localStorage.setItem(\"response\", response.data);\r\n      return response.data;\r\n    });\r\n  } catch (e) {\r\n    console.log(\"error in PostApi\");\r\n  }\r\n}\r\n\r\nexport async function getCalendarApi(\r\n  token: string,\r\n  params: any,\r\n  dispatch: any\r\n) {\r\n  try {\r\n    await axios({\r\n      method: \"post\",\r\n      url: `${api}/api/load`,\r\n      headers: {\r\n        'Accept': \"application/json\", //prettier-ignore\r\n        'Content-Type': \"application/json\", //prettier-ignore\r\n        Authorization: token,\r\n      },\r\n      data: params,\r\n    }).then((response) => {\r\n      // console.log(\"calendar받아오기\");\r\n      // console.log(response.data);\r\n      dispatch(getCalendarinfo(response.data));\r\n    });\r\n  } catch (e) {\r\n    console.log(\"error in getCalendarApi\");\r\n  }\r\n}\r\n\r\nexport async function sendfixedscheduleapi(token: string, params: any) {\r\n  try {\r\n    await axios({\r\n      method: \"post\",\r\n      url: `${api}/api/auto`,\r\n      headers: {\r\n        'Accept': \"application/json\", //prettier-ignore\r\n        'Content-Type': \"application/json\", //prettier-ignore\r\n        Authorization: token,\r\n      },\r\n      data: params,\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n    });\r\n  } catch (e) {\r\n    console.log(\"error in sendfixedscheduleapi\");\r\n  }\r\n}\r\n\r\nexport async function calendarupdateapi(token: string, params: any) {\r\n  try {\r\n    await axios({\r\n      method: \"post\",\r\n      url: `${api}/api/update`,\r\n      headers: {\r\n        'Accept': \"application/json\", //prettier-ignore\r\n        'Content-Type': \"application/json\", //prettier-ignore\r\n        Authorization: token,\r\n      },\r\n      data: params,\r\n    }).then((response) => {\r\n      console.log(response.data);\r\n    });\r\n  } catch (e) {\r\n    console.log(\"error in calendarupdateapi\");\r\n  }\r\n}\r\n","import { useHistory } from \"react-router\";\r\nimport { api, getUserinfoApi } from \"./UserApi\";\r\n\r\nexport function CheckToken() {\r\n  //token이 있으면 true반환\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token || token === \"undefined\") {\r\n    return false;\r\n  } else return true;\r\n}\r\n\r\nexport function CheckTokenMoveHome() {\r\n  const history = useHistory();\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token || token === \"undefined\") {\r\n    history.push(\"/\");\r\n  }\r\n}\r\n\r\nexport async function checkEffectiveToken(dispatch: any, history: any) {\r\n  const token = localStorage.getItem(\"token\");\r\n  console.log(\"token in checckEffectiveToken :\", token);\r\n  const response = await getUserinfoApi(token !== null ? token : \"\", dispatch);\r\n  if (response === false) {\r\n    alert(\"만료된 토큰입니다.\");\r\n    localStorage.clear();\r\n    history.push(\"/\");\r\n  }\r\n}\r\n\r\nexport default CheckToken;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CheckToken from \"../api/CheckToken\";\r\nimport \"../css/components/Header.css\";\r\n\r\nfunction Header() {\r\n  const [ScrollY, setScrollY] = useState(0); // window 의 pageYOffset값을 저장\r\n  const [ScrollActive, setScrollActive] = useState(false);\r\n  const history = useHistory();\r\n  function handleScroll() {\r\n    if (ScrollY > 10) {\r\n      setScrollY(window.pageYOffset);\r\n      setScrollActive(true);\r\n    } else {\r\n      setScrollY(window.pageYOffset);\r\n      setScrollActive(false);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    function scrollListener() {\r\n      window.addEventListener(\"scroll\", handleScroll);\r\n    } //  window 에서 스크롤을 감시 시작\r\n    scrollListener(); // window 에서 스크롤을 감시\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    }; //  window 에서 스크롤을 감시를 종료\r\n  });\r\n\r\n  const onlogout = () => {\r\n    if (CheckToken()) {\r\n      localStorage.clear();\r\n      history.go(0);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className={\"Header\" + (ScrollActive ? \" onScrolled\" : \"\")}>\r\n        <Link to=\"/\" className=\"left\">\r\n          <div className=\"logo-icon\"></div>\r\n          <div className=\"logo\"></div>\r\n        </Link>\r\n        <Link\r\n          to={CheckToken() ? \"/\" : \"/login\"}\r\n          onClick={onlogout}\r\n          className=\"right\"\r\n        >\r\n          {CheckToken() ? \"로그아웃\" : \"로그인\"}\r\n        </Link>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/containers/Introduce.css\";\r\nfunction Introduce() {\r\n  return (\r\n    <div className=\"Introduce\">\r\n      <div className=\"comment\">함께 만들어 나가는 ,</div>\r\n      <div className=\"shadowBox intro\">\r\n        <div className=\"Box first\">\r\n          아르바이트생도\r\n          <div className=\"staff\">\r\n            <img\r\n              className=\"img\"\r\n              src=\"https://img.icons8.com/external-icongeek26-flat-icongeek26/100/000000/external-waiter-food-and-delivery-icongeek26-flat-icongeek26-1.png\"\r\n            />\r\n            <img\r\n              className=\"img\"\r\n              src=\"https://img.icons8.com/external-icongeek26-flat-icongeek26/100/000000/external-waiter-food-and-delivery-icongeek26-flat-icongeek26.png\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"Box first\">\r\n          관리자도\r\n          <img\r\n            className=\"img\"\r\n            src=\"https://img.icons8.com/external-filled-outline-icons-maxicons/100/000000/external-boss-office-space-filled-outline-filled-outline-icons-maxicons.png\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"comment\">가장 직관적인 ,</div>\r\n      <div className=\"shadowBox intro\">\r\n        <div className=\"Box\">\r\n          그날의 기록을 일기처럼!\r\n          <div className=\"schedule-img img\"></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"comment\">가장 편리한 ,</div>\r\n      <div className=\"shadowBox intro\">\r\n        <div className=\"Box\">\r\n          일일히 카카오톡, 수기로 스케줄을 작성하셨나요?\r\n          <div className=\"fixedschedule img\"></div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"comment\">오직 매장만을 위한 스케줄러 ,</div>\r\n      <div className=\"logo-title\"></div>\r\n      <Link to=\"/login\" className=\"btn start-btn\">\r\n        로그인하고 시작하기\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Introduce;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CheckToken from \"../api/CheckToken\";\r\nimport \"../css/MkProject.css\";\r\n\r\nfunction MkProject() {\r\n  return (\r\n    <div className=\"MkProject\">\r\n      <div className=\"description\">\r\n        <div className=\"logo-title\"></div>\r\n        <p>그날의 알바 스케줄과 ,</p>\r\n        <br />\r\n        <p>그날의 기록을 써내려가는</p>\r\n        <br />\r\n        <br />\r\n        <p>매장전용 스케쥴러</p>\r\n\r\n        <div className=\"project\">\r\n          <Link\r\n            to={CheckToken() ? \"/newproject\" : \"/login\"}\r\n            className=\"indexbtn\"\r\n          >\r\n            일기 만들기\r\n          </Link>\r\n          <Link\r\n            to={CheckToken() ? \"/oldproject\" : \"/login\"}\r\n            className=\"indexbtn\"\r\n          >\r\n            내 알바일기\r\n          </Link>\r\n          <Link\r\n            to={CheckToken() ? \"/joinproject\" : \"/login\"}\r\n            className=\"indexbtn\"\r\n          >\r\n            일기 참여\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"icon\"></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MkProject;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUserinfoApi } from \"../api/UserApi\";\r\nimport Header from \"../components/Header\";\r\nimport Introduce from \"../components/Introduce\";\r\nimport MkProject from \"../components/MkProject\";\r\n\r\nfunction Index() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    getUserinfoApi(token, dispatch);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <MkProject />\r\n      <Introduce />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport CheckToken from \"../api/CheckToken\";\r\nimport { getUserinfoApi, UserApi } from \"../api/UserApi\";\r\n\r\nimport \"../css/containers/Login.css\";\r\n\r\nfunction Login(): JSX.Element {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    UserApi({\r\n      userId: e.target.email.value,\r\n      userPassword: e.target.password.value,\r\n    }).then(() => {\r\n      let token = localStorage.getItem(\"token\");\r\n\r\n      getUserinfoApi(token, dispatch);\r\n      if (CheckToken()) {\r\n        history.push(\"/\");\r\n      } else {\r\n        alert(\"로그인 정보가 없습니다\");\r\n        history.push(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Login-body\">\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        <form className=\"form-signin\" id=\"form-login\" onSubmit={onSubmit}>\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">로그인 정보 입력</h1>\r\n          <label htmlFor=\"inputEmail\" className=\"sr-only\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"이메일 주소\"\r\n            required\r\n            autoFocus\r\n          />\r\n          <label htmlFor=\"inputPassword\" className=\"sr-only\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n          />\r\n\r\n          <button className=\"btn-login\" type=\"submit\">\r\n            로그인\r\n          </button>\r\n\r\n          <div className=\"find\">\r\n            <Link to=\"/findid\">아이디 찾기</Link>\r\n            <Link to=\"/findpassword\">비밀번호 찾기</Link>\r\n            <Link to=\"/regist\">회원가입</Link>\r\n          </div>\r\n          <p className=\"mt-5 mb-3 text-muted\">&copy; 2022</p>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"../css/components/CheckEmailModal.css\";\r\n\r\ntype CheckEmailModalProps = {\r\n  visible: boolean;\r\n  onCancel: () => void;\r\n};\r\n\r\nfunction CheckEmailModal({ visible, onCancel }: CheckEmailModalProps) {\r\n  return (\r\n    <div\r\n      className={\"background\" + (visible ? \" visible\" : \"\")}\r\n      onClick={(event) => {\r\n        onCancel();\r\n      }}\r\n    >\r\n      <div className=\"emailmodal\" onClick={(event) => event.stopPropagation()}>\r\n        {/*이벤트 캡쳐링 방지 */}\r\n        회원가입이 완료되었습니다 <br /> <br />\r\n        이메일을 확인해주세요 <br /> <br /> (1~2분정도 소요될 수 있습니다)\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckEmailModal;\r\n","import React, { CSSProperties, useState } from \"react\";\r\nimport { RegistUserApi } from \"../api/UserApi\";\r\nimport \"../css/containers/Regist.css\";\r\nimport CheckEmailModal from \"../components/CheckEmailModal\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction Regist() {\r\n  const [password, setPassword] = useState(\"\"); // 비밀번호 일치확인\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [visible, setvisible] = useState(false);\r\n  const [correctpassword, setcorrectpassword] = useState(false);\r\n  const passwordType = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,20}$/;\r\n\r\n  const onCancel = () => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    if (passwordType.test(e.target.password.value)) {\r\n      if (password === confirmPassword) {\r\n        setvisible(true);\r\n        RegistUserApi({\r\n          userId: e.target.email.value,\r\n          userPassword: e.target.password.value,\r\n          userName: e.target.name.value,\r\n          userPhone: e.target.phone.value,\r\n        });\r\n      } else {\r\n        alert(\"비밀번호가 일치하지 않습니다\");\r\n      }\r\n    } else {\r\n      alert(\"비밀번호 양식을 확인해주세요\");\r\n    }\r\n  };\r\n\r\n  const onChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    passwordType.test(e.target.value)\r\n      ? setcorrectpassword(false)\r\n      : setcorrectpassword(true);\r\n    setPassword(e.target.value);\r\n  };\r\n  const onChangeConfirmPassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const uncorrectstyle: CSSProperties = {\r\n    border: password !== confirmPassword ? \"4px solid var(--main-color)\" : \"\",\r\n  };\r\n\r\n  const commentpassword: CSSProperties = {\r\n    display: correctpassword ? \"block\" : \"none\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Login-body\">\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        <form className=\"form-signin\" id=\"form-login\" onSubmit={onSubmit}>\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">회원가입 정보 입력</h1>\r\n\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"이메일 주소\"\r\n            required\r\n            autoFocus\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            className=\"form-control\"\r\n            placeholder=\"이름\"\r\n            required\r\n            autoFocus\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            id=\"phone\"\r\n            className=\"form-control\"\r\n            placeholder=\"핸드폰 번호\"\r\n            required\r\n            autoFocus\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n            autoFocus\r\n            onChange={onChangePassword}\r\n            style={uncorrectstyle}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            id=\"password-check\"\r\n            className=\"form-control\"\r\n            placeholder=\"비밀번호 확인\"\r\n            required\r\n            onChange={onChangeConfirmPassword}\r\n            style={uncorrectstyle}\r\n          />\r\n          <div style={commentpassword}>\r\n            비밀번호는 영어,숫자포함 8자에서 20자사이입니다\r\n          </div>\r\n\r\n          <button className=\"btn-login\" type=\"submit\">\r\n            회원가입\r\n          </button>\r\n          <div className=\"find\"></div>\r\n          <p className=\"mt-5 mb-3 text-muted\">&copy; 2022</p>\r\n        </form>\r\n      </div>\r\n      <CheckEmailModal visible={visible} onCancel={onCancel} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Regist;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { checkEffectiveToken, CheckTokenMoveHome } from \"../api/CheckToken\";\r\nimport { useHistory } from \"react-router\";\r\nimport Header from \"../components/Header\";\r\nimport \"../css/containers/OldProject.css\";\r\nimport { RootState } from \"../module\";\r\nimport { getCalendarApi } from \"../api/UserApi\";\r\n\r\ntype ProjecttitleProps = {\r\n  projectId: string;\r\n  projectName: string;\r\n};\r\n\r\nfunction Projecttitle({ projectId, projectName }: ProjecttitleProps) {\r\n  const dispatch = useDispatch();\r\n  const ongetCalendarApi = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    await getCalendarApi(token !== null ? token : \"\", { projectId }, dispatch);\r\n  };\r\n  return (\r\n    <Link\r\n      to={`project/?projectId=${projectId}`}\r\n      className=\"diary-inner-box Select-diary-box\"\r\n      onClick={ongetCalendarApi}\r\n    >\r\n      {projectName}\r\n    </Link>\r\n  );\r\n}\r\n\r\nfunction OldProject() {\r\n  CheckTokenMoveHome();\r\n  const { projects } = useSelector((state: RootState) => state.Userinfo)[0];\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    checkEffectiveToken(dispatch, history);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"diary-container\">\r\n        <Link to=\"/newproject\" className=\"diary-inner-box Make-diary-box\">\r\n          새 일기 만들기\r\n        </Link>\r\n        {projects.map((project, index) => {\r\n          return (\r\n            <Projecttitle\r\n              key={index}\r\n              projectId={project.projectId}\r\n              projectName={project.projectName}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OldProject;\r\n","import moment from \"moment\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport \"../css/components/Calendar.css\";\r\nimport { MdChevronRight, MdChevronLeft } from \"react-icons/md\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../module\";\r\nimport { projectType } from \"../module/User\";\r\n\r\ntype CalendarProps = {\r\n  onConfirm: () => void;\r\n  onConfirmDay: (days: moment.Moment) => void;\r\n  constproject: projectType;\r\n};\r\n\r\nfunction Calendar({ onConfirm, onConfirmDay, constproject }: CalendarProps) {\r\n  const calendar = useSelector((state: RootState) => state.CalenderInfo)[0];\r\n\r\n  const dates = calendar.dates;\r\n  const trueUserList = constproject.userList //참으로 표시한 userList\r\n    .filter((user) => user.done === true)\r\n    .map((user) => user.userName);\r\n\r\n  const [getMoment, setMoment] = useState(moment());\r\n  const today = getMoment; // today == moment()\r\n\r\n  const firstWeek = today.clone().startOf(\"month\").week();\r\n  const lastWeek =\r\n    today.clone().endOf(\"month\").week() === 1\r\n      ? 53\r\n      : today.clone().endOf(\"month\").week();\r\n\r\n  const calendarArr = () => {\r\n    let result: any = []; //type 맞춰줘야함\r\n    let week = firstWeek;\r\n\r\n    for (week; week <= lastWeek; week++) {\r\n      result = result.concat(\r\n        <div className=\"calendarWeek\" key={week}>\r\n          {Array(7)\r\n            .fill(0)\r\n            // eslint-disable-next-line no-loop-func\r\n            .map((data, index) => {\r\n              let days = today\r\n                .clone()\r\n                .startOf(\"year\")\r\n                .week(week)\r\n                .startOf(\"week\")\r\n                .add(index, \"day\");\r\n\r\n              let workflag = false;\r\n\r\n              try {\r\n                dates\r\n                  .filter((date) => date.date === days.format(\"YYMMDD\"))[0]\r\n                  .users.map((user) => {\r\n                    for (const truename in trueUserList) {\r\n                      if (user.name === trueUserList[truename]) {\r\n                        if (\r\n                          user.worktime !==\r\n                          \"000000000000000000000000000000000000000000000000\"\r\n                        ) {\r\n                          workflag = true;\r\n                        }\r\n                      }\r\n                    }\r\n                  });\r\n              } catch (error) {\r\n                workflag = false;\r\n              }\r\n\r\n              //console.log(days.format(\"YYMMDD\"));\r\n\r\n              const daycheck =\r\n                days.format(\"MM\") !== today.format(\"MM\")\r\n                  ? \" gray\"\r\n                  : moment().format(\"YYYYMMDD\") === days.format(\"YYYYMMDD\")\r\n                  ? \" today\"\r\n                  : \"\";\r\n\r\n              return (\r\n                <div\r\n                  className={\"calendarDay\" + daycheck}\r\n                  id={workflag ? \"check\" : \"\"}\r\n                  key={index}\r\n                  onClick={() => {\r\n                    onConfirm();\r\n                    onConfirmDay(days);\r\n                  }}\r\n                >\r\n                  {days.format(\"D\")}\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      );\r\n    }\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <div className=\"control\">\r\n        <button\r\n          className=\"btn btn-calendar btn-beforeMonth\"\r\n          onClick={() => {\r\n            setMoment(getMoment.clone().subtract(1, \"month\"));\r\n          }}\r\n        >\r\n          <MdChevronLeft />\r\n        </button>\r\n        <span>{today.format(\"YYYY 년 MM 월\")}</span>\r\n        <button\r\n          className=\"btn btn-calendar btn-afterMonth\"\r\n          onClick={() => {\r\n            setMoment(getMoment.clone().add(1, \"month\"));\r\n          }}\r\n        >\r\n          <MdChevronRight />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"calendarBody\">\r\n        <div className=\"calendarDays\">\r\n          <div className=\"calendarDayofWeek sunday\">SUN</div>\r\n          <div className=\"calendarDayofWeek\">MON</div>\r\n          <div className=\"calendarDayofWeek\">THU</div>\r\n          <div className=\"calendarDayofWeek\">WEN</div>\r\n          <div className=\"calendarDayofWeek\">THU</div>\r\n          <div className=\"calendarDayofWeek\">FRI</div>\r\n          <div className=\"calendarDayofWeek saturday\">SAT</div>\r\n        </div>\r\n        {calendarArr()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { getCalendarApi, sendfixedscheduleapi } from \"../api/UserApi\";\r\nimport \"../css/components/FixedSchedule.css\";\r\nimport { RootState } from \"../module\";\r\nimport { toggleFixedSchedule } from \"../module/Calendar\";\r\n\r\ntype fixedScheduleProps = {\r\n  userId: string;\r\n  FixedSchedulevisible: boolean;\r\n  setFixedSchedulevisible: (value: boolean) => void;\r\n};\r\n\r\ntype FixedscheduletimeProps = {\r\n  worktimes: string;\r\n  dayId: string;\r\n};\r\n\r\nfunction FixedSchedule({\r\n  userId,\r\n  FixedSchedulevisible,\r\n  setFixedSchedulevisible,\r\n}: fixedScheduleProps) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const projectId = location.search.slice(11);\r\n  const calendar = useSelector((state: RootState) => state.CalenderInfo)[0];\r\n  const userList = calendar.userList;\r\n\r\n  const user = userList.filter((user) => user.userId === userId)[0];\r\n\r\n  if (!FixedSchedulevisible) return <></>;\r\n\r\n  let hours = []; //00:00 ~ 23:30까지 생성\r\n  for (let i = 0; i < 24; i++) {\r\n    i < 10 ? hours.push(\"0\" + String(i)) : hours.push(String(i));\r\n  }\r\n  const minutes = [\"00\", \"30\"];\r\n  let times: string[] = [];\r\n  hours.map((hour) => {\r\n    minutes.map((minute) => {\r\n      times.push(hour + \":\" + minute);\r\n    });\r\n  });\r\n\r\n  const onSendfixedschedule = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    await sendfixedscheduleapi(token === null ? \"\" : token, calendar).then(\r\n      () => {\r\n        //window.location.replace(`/project/?projectId=${projectId}`);\r\n        history.push(`/oldproject`);\r\n        setFixedSchedulevisible(false);\r\n      }\r\n    );\r\n    setFixedSchedulevisible(false);\r\n  };\r\n\r\n  const FixedScheduletime = ({ worktimes, dayId }: FixedscheduletimeProps) => {\r\n    const worktimelst = worktimes.split(\"\");\r\n    const [dragflag, setdragflag] = useState(false);\r\n    const [draglst, setdraglst] = useState<number[]>([]);\r\n\r\n    return (\r\n      <div className=\"worktimes\">\r\n        {worktimelst.map((worktime, index) => {\r\n          return worktime === \"1\" ? (\r\n            <div\r\n              className=\"time work touch\"\r\n              key={index}\r\n              style={{ background: \"var(--main-color)\" }}\r\n              onClick={() =>\r\n                dispatch(\r\n                  toggleFixedSchedule({\r\n                    userId,\r\n                    dayId,\r\n                    index,\r\n                  })\r\n                )\r\n              }\r\n              onMouseDown={() => {\r\n                setdragflag(true);\r\n                setdraglst(draglst.concat([index]));\r\n              }}\r\n              onMouseUp={() => {\r\n                setdragflag(false);\r\n                draglst.map((index) =>\r\n                  dispatch(\r\n                    toggleFixedSchedule({\r\n                      userId,\r\n                      dayId,\r\n                      index,\r\n                    })\r\n                  )\r\n                );\r\n                setdraglst([]);\r\n              }}\r\n              onMouseEnter={() =>\r\n                dragflag ? setdraglst(draglst.concat([index])) : \"\"\r\n              }\r\n            ></div>\r\n          ) : (\r\n            <div\r\n              className=\"time touch\"\r\n              key={index}\r\n              onClick={() =>\r\n                dispatch(\r\n                  toggleFixedSchedule({\r\n                    userId,\r\n                    dayId,\r\n                    index,\r\n                  })\r\n                )\r\n              }\r\n              onMouseDown={() => {\r\n                setdragflag(true);\r\n                setdraglst(draglst.concat([index]));\r\n              }}\r\n              onMouseUp={() => {\r\n                setdragflag(false);\r\n                draglst.map((index) =>\r\n                  dispatch(\r\n                    toggleFixedSchedule({\r\n                      userId,\r\n                      dayId,\r\n                      index,\r\n                    })\r\n                  )\r\n                );\r\n                setdraglst([]);\r\n              }}\r\n              onMouseEnter={() =>\r\n                dragflag ? setdraglst(draglst.concat([index])) : \"\"\r\n              }\r\n            ></div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"fixedSchedule\"\r\n        onClick={() => setFixedSchedulevisible(false)}\r\n      >\r\n        <div\r\n          className=\"settingBox shadowBox \"\r\n          onClick={(event) => event.stopPropagation()}\r\n        >\r\n          {user.name} 님의 고정근무 설정\r\n          <div className=\"settingBoxUp schedule shadowBox\">\r\n            <div className=\"times column-line fixedtimeline\">\r\n              <div className=\"first-row-line\">시간</div>\r\n              <div className=\"worktimes\">\r\n                {times.map((time, index) => {\r\n                  return (\r\n                    <div className=\"time\" key={index}>\r\n                      {time}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n            {user.fixedtimes.map((day, index) => {\r\n              return (\r\n                <div className=\"times columnline fixedtimeline\" key={index}>\r\n                  <div className=\"first-row-line\">\r\n                    {day.dayId.slice(0, 3).toUpperCase()}\r\n                  </div>\r\n                  <FixedScheduletime\r\n                    worktimes={day.worktime}\r\n                    dayId={day.dayId}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <div className=\"settingBoxDown\">\r\n            <div className=\"settingBoxbtn btn\" onClick={onSendfixedschedule}>\r\n              저장\r\n            </div>\r\n            <div\r\n              className=\"settingBoxbtn btn\"\r\n              onClick={() => {\r\n                setFixedSchedulevisible(false);\r\n                history.go(0);\r\n              }}\r\n            >\r\n              취소\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FixedSchedule;\r\n","import React from \"react\";\r\nimport \"../css/components/ModalJoinProject.css\";\r\n\r\ntype ModalJoinProjectProps = {\r\n  visible: boolean;\r\n  projectId: string;\r\n  onCancelJoinModal: () => void;\r\n};\r\n\r\nfunction ModalJoinProject({\r\n  visible,\r\n  projectId,\r\n  onCancelJoinModal,\r\n}: ModalJoinProjectProps) {\r\n  if (!visible) return <></>;\r\n\r\n  return (\r\n    <div className=\"backJoinProjectModal\" onClick={onCancelJoinModal}>\r\n      <div\r\n        className=\"JoinProjectModal\"\r\n        onClick={(event) => event.stopPropagation()}\r\n      >\r\n        <p>당신의 팀원에게 참여코드를 전송해 주세요</p>\r\n        <br />\r\n        <br />\r\n        <p>{projectId}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalJoinProject;\r\n","import React from \"react\";\r\nimport \"../css/components/UserList.css\";\r\n\r\nimport { MdDone, MdAdd, MdSettings } from \"react-icons/md\";\r\n\r\nimport classNames from \"classnames\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { projectType, toggleName } from \"../module/User\";\r\nimport { api, PostApi } from \"../api/UserApi\";\r\nimport { useHistory } from \"react-router\";\r\nimport { RootState } from \"../module\";\r\n\r\ntype UserProps = {\r\n  done: boolean;\r\n  text: string;\r\n  projectId: string;\r\n  projectRole: string;\r\n  userId: string;\r\n  currentUserId: string;\r\n  joinId: string;\r\n};\r\n\r\ntype UserListProps = {\r\n  projectId: string;\r\n  projects: projectType[];\r\n  projectRole: string;\r\n  currentUserId: string;\r\n  onActiveJoinModal: () => void;\r\n  setFixedSchedulevisible: (value: boolean) => void;\r\n  setuserId: (value: string) => void;\r\n};\r\n\r\nfunction UserList({\r\n  projectId,\r\n  projects,\r\n  projectRole,\r\n  currentUserId,\r\n  onActiveJoinModal,\r\n  setFixedSchedulevisible,\r\n  setuserId,\r\n}: UserListProps) {\r\n  const project = projects.filter(\r\n    (project) => project.projectId === projectId\r\n  )[0];\r\n\r\n  const users = project.userList;\r\n\r\n  function User({\r\n    done,\r\n    text,\r\n    projectId,\r\n    projectRole,\r\n    userId,\r\n    currentUserId,\r\n    joinId,\r\n  }: UserProps) {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const onclickUser = () => {\r\n      dispatch(toggleName(text, projectId));\r\n    };\r\n    const checkMaster = (projectRole: string) => {\r\n      return projectRole === \"MASTER\" ? true : false;\r\n    };\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    const onRemoveUser = () => {\r\n      if (window.confirm(\"정말로 삭제하시겠습니까?\")) {\r\n        PostApi(`${api}/api/deleteproject`, token === null ? \"\" : token, {\r\n          joinId,\r\n          targetId: userId,\r\n        });\r\n        history.push(\"/oldproject\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"User\">\r\n        <div className=\"User-left\">\r\n          <div\r\n            className={classNames(\"checkBox\", { checkBoxDone: done })}\r\n            onClick={onclickUser}\r\n          >\r\n            {done && <MdDone />}\r\n          </div>\r\n          <div\r\n            className={classNames(\"userText\", { userTextDone: done })}\r\n            onClick={onclickUser}\r\n          >\r\n            {text}\r\n          </div>\r\n        </div>\r\n        <div className=\"User-right\">\r\n          <div className=\"usersetting\">\r\n            {checkMaster(projectRole) === true ? (\r\n              <MdSettings\r\n                onClick={() => {\r\n                  setFixedSchedulevisible(true);\r\n                  setuserId(userId);\r\n                }}\r\n              />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"userdelete\">\r\n            {checkMaster(projectRole) === true || userId === currentUserId ? (\r\n              <MdAdd onClick={onRemoveUser} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"UserList\">\r\n      <div className=\"UserList-title\">사용자 목록</div>\r\n\r\n      {users.map((user, index) => {\r\n        return (\r\n          <User\r\n            key={index}\r\n            done={user.done}\r\n            text={user.userName}\r\n            projectId={projectId}\r\n            projectRole={projectRole}\r\n            userId={user.userId}\r\n            currentUserId={currentUserId}\r\n            joinId={project.joinId === undefined ? \"\" : project.joinId}\r\n          />\r\n        );\r\n      })}\r\n      <div className=\"plusBox\">\r\n        <MdAdd onClick={onActiveJoinModal} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n","import React, { createRef, useState } from \"react\";\r\nimport \"../css/components/Record.css\";\r\nimport { MdAdd, MdRestoreFromTrash } from \"react-icons/md\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../module\";\r\nimport { addDetail, dayIssueType, removeDetail } from \"../module/Calendar\";\r\nimport { calendarupdateapi } from \"../api/UserApi\";\r\n\r\ntype RecordProps = {\r\n  selectedDay: string;\r\n};\r\n\r\nfunction Record({ selectedDay }: RecordProps) {\r\n  const dispatch = useDispatch();\r\n  const calendar = useSelector((state: RootState) => state.CalenderInfo)[0];\r\n  const [saveflag, setsaveflag] = useState(false);\r\n  const day =\r\n    selectedDay.slice(0, 4) +\r\n    \"-\" +\r\n    selectedDay.slice(6, 8) +\r\n    \"-\" +\r\n    selectedDay.slice(10, 12);\r\n  const today = new Date(day).getDay();\r\n  const week = new Array(\r\n    \"일요일\",\r\n    \"월요일\",\r\n    \"화요일\",\r\n    \"수요일\",\r\n    \"목요일\",\r\n    \"금요일\",\r\n    \"토요일\"\r\n  ); //요일구하기\r\n  const currentdate = selectedDay.replace(/[^0-9]/g, \"\").slice(2); //현재날짜출력\r\n  const issues = useSelector(\r\n    //users목록 추출\r\n    (state: RootState) => state.CalenderInfo,\r\n    shallowEqual\r\n  )[0].dates.filter((date) => date.date === currentdate)[0].dayIssues;\r\n  const user = useSelector((state: RootState) => state.Userinfo)[0];\r\n\r\n  const DayIssue = ({ name, time, text }: dayIssueType, userName: string) => {\r\n    return (\r\n      <div className=\"issuebox\">\r\n        <div>{text}</div>\r\n        <div className=\"issuedetail\">\r\n          <div>{name}&nbsp;</div>\r\n          <div>{time}</div>\r\n          <MdRestoreFromTrash\r\n            className=\"trash\"\r\n            onClick={() => {\r\n              dispatch(removeDetail({ name: userName, text }));\r\n              setsaveflag(true);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const date = new Date();\r\n  let currenttime = String(date.getHours()) + \":\" + String(date.getMinutes());\r\n\r\n  const onsubmitdetail = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    await dispatch(\r\n      addDetail({\r\n        date: currentdate,\r\n        text: e.target.addDetail.value,\r\n        name: user.userName,\r\n        time: currenttime,\r\n        userId: user.userId,\r\n      })\r\n    );\r\n    e.target.addDetail.value = \"\";\r\n    setsaveflag(true);\r\n  };\r\n\r\n  if (saveflag) {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    calendarupdateapi(token === null ? \"\" : token, calendar);\r\n\r\n    setsaveflag(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"record\">\r\n      <div className=\"record-header\">\r\n        <div className=\"selectedDay\">{selectedDay}</div>\r\n        <div className=\"day-of-week\">{week[today]}</div>\r\n      </div>\r\n      <div className=\"record-body\">\r\n        {issues.map((issue, index) => {\r\n          return <div key={index}>{DayIssue(issue, user.userName)}</div>;\r\n        })}\r\n      </div>\r\n      <form className=\"recordform\" onSubmit={onsubmitdetail}>\r\n        <textarea\r\n          id=\"addDetail\"\r\n          className=\"inputBox\"\r\n          placeholder=\"특이사항을 입력하세요\"\r\n        />\r\n        <button className=\"plusBox\">\r\n          <MdAdd type=\"submit\" />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Record;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MdAdd } from \"react-icons/md\";\r\nimport \"../css/components/Schedule.css\";\r\nimport { RootState } from \"../module\";\r\nimport {\r\n  addDate,\r\n  addScheduleUser,\r\n  removeScheduleUser,\r\n  toggleDetail,\r\n} from \"../module/Calendar\";\r\n\r\ntype ScheduleProps = {\r\n  selectedDay: string;\r\n  projectRole: string;\r\n};\r\n\r\ntype UserScheduleProps = {\r\n  worktimes: string;\r\n  username: string;\r\n};\r\n\r\nfunction Schedule({ selectedDay, projectRole }: ScheduleProps) {\r\n  const dispatch = useDispatch();\r\n  const [visible, setvisible] = useState(false); //modal 변수\r\n\r\n  let hours = []; //00:00 ~ 23:30까지 생성\r\n  for (let i = 0; i < 24; i++) {\r\n    i < 10 ? hours.push(\"0\" + String(i)) : hours.push(String(i));\r\n  }\r\n  const minutes = [\"00\", \"30\"];\r\n  let times: string[] = [];\r\n  hours.map((hour) => {\r\n    minutes.map((minute) => {\r\n      times.push(hour + \":\" + minute);\r\n    });\r\n  });\r\n\r\n  const currentdate = selectedDay.replace(/[^0-9]/g, \"\").slice(2); //현재날짜출력\r\n\r\n  try {\r\n    //user목록 없을때 임시로 추출\r\n    // const test = useSelector(\r\n    //   //users목록 추출\r\n    //   (state: RootState) => state.CalenderInfo\r\n    // )[0].dates.filter((date) => date.date === currentdate)[0].users;\r\n\r\n    const test = useSelector(\r\n      (state: RootState) => state.CalenderInfo\r\n    )[0].dates.filter((date) => date.date === currentdate)[0].users;\r\n  } catch (error) {\r\n    dispatch(addDate(currentdate));\r\n  }\r\n\r\n  const Calendar = useSelector((state: RootState) => state.CalenderInfo)[0];\r\n\r\n  const users = Calendar.dates.filter((date) => date.date === currentdate)[0]\r\n    .users;\r\n\r\n  const currentuserList = users.map((user) => user.name); //현재 스케쥴이 없는 유저의 리스트를 만드는 부분\r\n  const everyuserList = Calendar.userList.map((user) => user.name);\r\n  const exceptuserList = everyuserList.filter(\r\n    (user) => !currentuserList.includes(user)\r\n  );\r\n\r\n  const finduserId = (name: string) => {\r\n    return Calendar.userList.filter((user) => user.name === name)[0].userId;\r\n  };\r\n\r\n  const onsubmitScheduleUser = (e: any) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      addScheduleUser({\r\n        date: currentdate,\r\n        name: e.target.adduser.value,\r\n        userId: finduserId(e.target.adduser.value),\r\n      })\r\n    );\r\n    e.target.adduser.value = \"\";\r\n    setvisible(false);\r\n    console.log(Calendar);\r\n  };\r\n\r\n  const onremoveScheduleUser = (name: string) => {\r\n    dispatch(\r\n      removeScheduleUser({\r\n        date: currentdate,\r\n        name,\r\n        userId: finduserId(name),\r\n      })\r\n    );\r\n  };\r\n\r\n  const UserShedule = ({ worktimes, username }: UserScheduleProps) => {\r\n    const worktimelst = worktimes.split(\"\");\r\n    const [dragflag, setdragflag] = useState(false);\r\n    const [draglst, setdraglst] = useState<number[]>([]);\r\n\r\n    const onclicktime = (index: number) => {\r\n      if (projectRole === \"MASTER\") {\r\n        dispatch(\r\n          toggleDetail({\r\n            date: currentdate,\r\n            name: username,\r\n            index,\r\n            userId: finduserId(username),\r\n          })\r\n        );\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"worktimes\">\r\n        {worktimelst.map((worktime, index) => {\r\n          return worktime === \"1\" ? (\r\n            <div\r\n              className=\"time work touch\"\r\n              key={index}\r\n              onClick={() => {\r\n                onclicktime(index);\r\n              }}\r\n              onMouseDown={() => {\r\n                setdragflag(true);\r\n                setdraglst(draglst.concat([index]));\r\n              }}\r\n              onMouseUp={() => {\r\n                setdragflag(false);\r\n                draglst.map((index) => onclicktime(index));\r\n                setdraglst([]);\r\n              }}\r\n              onMouseEnter={() =>\r\n                dragflag ? setdraglst(draglst.concat([index])) : \"\"\r\n              }\r\n            >\r\n              {username}\r\n            </div>\r\n          ) : (\r\n            <div\r\n              className=\"time touch\"\r\n              key={index}\r\n              onClick={() => {\r\n                onclicktime(index);\r\n              }}\r\n              onMouseDown={() => {\r\n                setdragflag(true);\r\n                setdraglst(draglst.concat([index]));\r\n              }}\r\n              onMouseUp={() => {\r\n                setdragflag(false);\r\n                draglst.map((index) => onclicktime(index));\r\n                setdraglst([]);\r\n              }}\r\n              onMouseEnter={() =>\r\n                dragflag ? setdraglst(draglst.concat([index])) : \"\"\r\n              }\r\n            ></div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"schedule shadowBox\">\r\n      <div className=\"times column-line\">\r\n        <div className=\"first-row-line\">시간</div>\r\n        <div className=\"worktimes\">\r\n          {times.map((time, index) => {\r\n            return (\r\n              <div className=\"time\" key={index}>\r\n                {time}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n\r\n      {users.map((user, index) => {\r\n        return (\r\n          <div className=\"column-line\" key={index}>\r\n            <div className=\"first-row-line\">\r\n              {user.name}\r\n              {projectRole === \"MASTER\" ? (\r\n                <MdAdd\r\n                  className=\"removeScheduleuserbtn\"\r\n                  onClick={() => {\r\n                    onremoveScheduleUser(user.name);\r\n                  }}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n            <UserShedule worktimes={user.worktime} username={user.name} />\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      {projectRole === \"MASTER\" ? (\r\n        <div className=\"column-line user-plus-btn\">\r\n          <MdAdd\r\n            className=\"addbtn scheduleAdd\"\r\n            onClick={() => {\r\n              exceptuserList.length === 0\r\n                ? alert(\"추가할 사용자가 없습니다!\")\r\n                : setvisible(true);\r\n            }}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <form\r\n        className={\r\n          \"ScheduleUserAddForm shadowBox\" + (visible ? \" visible\" : \"\")\r\n        }\r\n        onSubmit={onsubmitScheduleUser}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          list=\"exceptUserList\"\r\n          className=\"inputScheduleUser\"\r\n          placeholder=\"추가할 사용자 이름을 선택해주세요!\"\r\n          id=\"adduser\"\r\n          autoComplete=\"off\"\r\n        ></input>\r\n        <datalist id=\"exceptUserList\">\r\n          {exceptuserList.map((name, index) => {\r\n            return <option key={index}>{name}</option>;\r\n          })}\r\n        </datalist>\r\n        <div className=\"ScheduleFormRight\">\r\n          <button className=\"adduserbtn btn\">추가</button>\r\n          <div\r\n            className=\"adduserbtn btn\"\r\n            onClick={() => {\r\n              setvisible(false);\r\n            }}\r\n          >\r\n            취소\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Schedule;\r\n","import React from \"react\";\r\nimport Record from \"../components/Record\";\r\nimport Schedule from \"../components/Schedule\";\r\nimport \"../css/containers/DayDetail.css\";\r\n\r\ntype DaydetailProps = {\r\n  visible: boolean;\r\n  onCancel: () => void;\r\n  selectedDay: string;\r\n  projectRole: string;\r\n};\r\n\r\nfunction DayDetail({\r\n  visible,\r\n  onCancel,\r\n  selectedDay,\r\n  projectRole,\r\n}: DaydetailProps) {\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div\r\n      className={\"background\" + (visible ? \" visible\" : \"\")}\r\n      onClick={(event) => {\r\n        onCancel();\r\n      }}\r\n    >\r\n      <div\r\n        className=\"dayDetail shadowBox\"\r\n        onClick={(event) => event.stopPropagation()}\r\n      >\r\n        {/*이벤트 캡쳐링 방지 */}\r\n        <Schedule selectedDay={selectedDay} projectRole={projectRole} />\r\n        <div className=\"dayDetailRight\">\r\n          <Record selectedDay={selectedDay} />\r\n\r\n          <button className=\"cancel-btn btn\" onClick={onCancel}>\r\n            취소\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DayDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { checkEffectiveToken, CheckTokenMoveHome } from \"../api/CheckToken\";\r\nimport { calendarupdateapi, getCalendarApi } from \"../api/UserApi\";\r\n\r\nimport Calendar from \"../components/Calendar\";\r\nimport FixedSchedule from \"../components/FixedSchedule\";\r\nimport Header from \"../components/Header\";\r\nimport ModalJoinProject from \"../components/ModalJoinProject\";\r\nimport UserList from \"../components/UserList\";\r\nimport \"../css/containers/Project.css\";\r\nimport { RootState } from \"../module\";\r\nimport DayDetail from \"./DayDetail\";\r\n\r\nfunction Project() {\r\n  CheckTokenMoveHome();\r\n  const user = useSelector((state: RootState) => state.Userinfo)[0];\r\n  const calendar = useSelector((state: RootState) => state.CalenderInfo)[0];\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const projectId = location.search.slice(11);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  useEffect(() => {\r\n    checkEffectiveToken(dispatch, history);\r\n    getCalendarApi(token === null ? \"\" : token, { projectId }, dispatch);\r\n  }, []);\r\n\r\n  const [visible, setvisible] = useState(false); //토글방식\r\n  const [JoinModalvisible, setJoinModalvisible] = useState(false);\r\n  const [FixedSchedulevisible, setFixedSchedulevisible] = useState(false);\r\n  const [selectedDay, setselectedDay] = useState(\"\"); //날짜전달\r\n  const [userId, setuserId] = useState(\"\");\r\n\r\n  const projects = user.projects;\r\n\r\n  const constproject = projects.filter(\r\n    (project) => project.projectId === projectId\r\n  )[0]; //해당 id의 userList 추출\r\n  /*새로고침 오류 방지 */\r\n  if (constproject === undefined) {\r\n    return <></>;\r\n  }\r\n\r\n  const onConfirmDay = (days: moment.Moment) => {\r\n    setselectedDay(days.format(\"YYYY년 MM월 DD일\"));\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const onSaveCalendar = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    await calendarupdateapi(token === null ? \"\" : token, calendar).then(() => {\r\n      history.push(`/project/?projectId=${projectId}`);\r\n    });\r\n  };\r\n\r\n  const onConfirm = () => setvisible(true);\r\n\r\n  const onCancelJoinModal = () => setJoinModalvisible(false);\r\n  const onActiveJoinModal = () => setJoinModalvisible(true);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"project\">\r\n        <UserList\r\n          projectId={projectId}\r\n          projects={projects}\r\n          projectRole={\r\n            constproject.projectRole === undefined\r\n              ? \"\"\r\n              : constproject.projectRole\r\n          }\r\n          currentUserId={user.userId}\r\n          onActiveJoinModal={onActiveJoinModal}\r\n          setFixedSchedulevisible={setFixedSchedulevisible}\r\n          setuserId={setuserId}\r\n        />\r\n        <div className=\"projectRight\">\r\n          <div className=\"projecthead\">\r\n            <div className=\"projectTitle\">{constproject.projectName}</div>\r\n            {constproject.projectRole === \"MASTER\" ? (\r\n              <div className=\"savebtn btn\" onClick={onSaveCalendar}>\r\n                저장\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <Calendar\r\n            onConfirm={onConfirm}\r\n            onConfirmDay={onConfirmDay}\r\n            constproject={constproject}\r\n          />\r\n        </div>\r\n      </div>\r\n      <DayDetail\r\n        visible={visible}\r\n        onCancel={onCancel}\r\n        selectedDay={selectedDay}\r\n        projectRole={\r\n          constproject.projectRole === undefined ? \"\" : constproject.projectRole\r\n        }\r\n      />\r\n      <ModalJoinProject\r\n        visible={JoinModalvisible}\r\n        projectId={projectId}\r\n        onCancelJoinModal={onCancelJoinModal}\r\n      />\r\n\r\n      <FixedSchedule\r\n        userId={userId}\r\n        FixedSchedulevisible={FixedSchedulevisible}\r\n        setFixedSchedulevisible={setFixedSchedulevisible}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { checkEffectiveToken, CheckTokenMoveHome } from \"../api/CheckToken\";\r\nimport { api, PostApi } from \"../api/UserApi\";\r\nimport Header from \"../components/Header\";\r\nimport \"../css/containers/NewProject.css\";\r\nimport { addProject } from \"../module/User\";\r\n\r\nfunction NewProject() {\r\n  CheckTokenMoveHome();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    checkEffectiveToken(dispatch, history);\r\n  }, []);\r\n\r\n  const makeNewProject = async (e: any) => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    e.preventDefault();\r\n    dispatch(addProject(e.target.Name.value));\r\n    const postapi = await PostApi(\r\n      `${api}/api/newproject`,\r\n      token !== null ? token : \"\",\r\n      { projectName: e.target.Name.value }\r\n    )\r\n      .then(() => {\r\n        history.push(\"/oldproject\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(\"makeNewProject Error!!!\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"NewProject\">\r\n        <form onSubmit={makeNewProject}>\r\n          <div className=\"Stepbox\">\r\n            매장명 하나면 충분합니다!\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"매장명을 입력하세요\"\r\n              id=\"Name\"\r\n              className=\"question\"\r\n            ></input>\r\n          </div>\r\n          <button className=\"makeProject\">만들기!</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewProject;\r\n","import React from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { Emailrequestapi } from \"../api/UserApi\";\r\nimport \"../css/containers/Emaildone.css\";\r\n\r\nimport { MdSentimentVerySatisfied } from \"react-icons/md\";\r\nfunction Emaildone() {\r\n  const location = useLocation();\r\n  const id = location.search.slice(4);\r\n  console.log(id);\r\n\r\n  Emailrequestapi({ id });\r\n\r\n  return (\r\n    <div className=\"Emaildone\">\r\n      <MdSentimentVerySatisfied className=\"smile\" />\r\n      <div className=\"loading\">로딩중 . . .</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Emaildone;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { CheckTokenMoveHome } from \"../api/CheckToken\";\r\nimport { api, PostApi } from \"../api/UserApi\";\r\nimport Header from \"../components/Header\";\r\nimport \"../css/containers/NewProject.css\";\r\nfunction JoinProject() {\r\n  CheckTokenMoveHome();\r\n  const token = localStorage.getItem(\"token\");\r\n  const history = useHistory();\r\n\r\n  const joinProject = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    const success = () => {\r\n      alert(\"성공적으로 참여되었습니다\");\r\n      history.push(\"/oldproject\");\r\n    };\r\n    await PostApi(`${api}/api/joinproject`, token !== null ? token : \"\", {\r\n      projectId: e.target.code.value,\r\n    }).then(() => {\r\n      localStorage.getItem(\"response\") === \"true\"\r\n        ? success()\r\n        : alert(\"이미 참여되었거나 존재하지 않는 코드입니다\");\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"NewProject\">\r\n        <form onSubmit={joinProject}>\r\n          <div className=\"Stepbox\">\r\n            참여코드 하나면 충분합니다!\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"참여코드를 입력하세요\"\r\n              id=\"code\"\r\n              className=\"question\"\r\n            ></input>\r\n          </div>\r\n          <button className=\"makeProject\">참여하기!</button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JoinProject;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { findidapi } from \"../api/UserApi\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction FindId() {\r\n  const [visible, setvisible] = useState(false);\r\n  const [IdList, setIdList] = useState([]);\r\n  const onCancel = () => {\r\n    setvisible(false);\r\n  };\r\n\r\n  const onSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    const list = await findidapi({\r\n      userName: e.target.userName.value,\r\n      userPhone: e.target.userPhone.value,\r\n    });\r\n    setIdList(list);\r\n    setvisible(true);\r\n  };\r\n\r\n  function IdlistModal() {\r\n    return (\r\n      <div\r\n        className={\"background\" + (visible ? \" visible\" : \"\")}\r\n        onClick={(event) => {\r\n          onCancel();\r\n        }}\r\n      >\r\n        <div\r\n          className=\"emailmodal\"\r\n          onClick={(event) => event.stopPropagation()}\r\n        >\r\n          아이디 목록\r\n          {IdList.map((text, index) => {\r\n            return <div key={index}>{text}</div>;\r\n          })}\r\n          <Link to=\"/\">홈 화면으로 이동</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Login-body\">\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        <form className=\"form-signin\" id=\"form-login\" onSubmit={onSubmit}>\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">아이디 찾기</h1>\r\n          <label htmlFor=\"inputEmail\" className=\"sr-only\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"userName\"\r\n            className=\"form-control\"\r\n            placeholder=\"이름\"\r\n            required\r\n            autoFocus\r\n          />\r\n          <label htmlFor=\"inputPassword\" className=\"sr-only\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"userPhone\"\r\n            className=\"form-control\"\r\n            placeholder=\"핸드폰 번호\"\r\n            required\r\n          />\r\n\r\n          <button className=\"btn-login\" type=\"submit\">\r\n            아이디 찾기\r\n          </button>\r\n\r\n          <div className=\"find\">\r\n            <Link to=\"/login\">로그인</Link>\r\n            <Link to=\"/findpassword\">비밀번호 찾기</Link>\r\n            <Link to=\"/regist\">회원가입</Link>\r\n          </div>\r\n          <p className=\"mt-5 mb-3 text-muted\">&copy; 2022</p>\r\n        </form>\r\n      </div>\r\n      <IdlistModal />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FindId;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { findpasswordapi } from \"../api/UserApi\";\r\n\r\nfunction FindPassword() {\r\n  const [visible, setvisible] = useState(false);\r\n  const onCancel = () => {\r\n    setvisible(false);\r\n  };\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    setvisible(true);\r\n    findpasswordapi({\r\n      userId: e.target.userId.value,\r\n      userName: e.target.userName.value,\r\n    });\r\n  };\r\n\r\n  function CheckEmailModal() {\r\n    return (\r\n      <div\r\n        className={\"background\" + (visible ? \" visible\" : \"\")}\r\n        onClick={(event) => {\r\n          onCancel();\r\n        }}\r\n      >\r\n        <div\r\n          className=\"emailmodal\"\r\n          onClick={(event) => event.stopPropagation()}\r\n        >\r\n          {/*이벤트 캡쳐링 방지 */}\r\n          비밀번호 찾기가 완료되었습니다 <br /> <br />\r\n          이메일을 확인해주세요\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Login-body\">\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        <form className=\"form-signin\" id=\"form-login\" onSubmit={onSubmit}>\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">비밀번호 찾기</h1>\r\n          <label htmlFor=\"inputEmail\" className=\"sr-only\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"userName\"\r\n            className=\"form-control\"\r\n            placeholder=\"이름\"\r\n            required\r\n            autoFocus\r\n          />\r\n          <label htmlFor=\"inputPassword\" className=\"sr-only\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"userId\"\r\n            className=\"form-control\"\r\n            placeholder=\"아이디 (이메일)\"\r\n            required\r\n          />\r\n\r\n          <button className=\"btn-login\" type=\"submit\">\r\n            비밀번호 찾기\r\n          </button>\r\n\r\n          <div className=\"find\">\r\n            <Link to=\"/findid\">아이디 찾기</Link>\r\n            <Link to=\"/regist\">회원가입</Link>\r\n          </div>\r\n          <p className=\"mt-5 mb-3 text-muted\">&copy; 2022</p>\r\n        </form>\r\n      </div>\r\n      <CheckEmailModal />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FindPassword;\r\n","import React, { CSSProperties, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { resetpasswordapi } from \"../api/UserApi\";\r\n\r\nfunction ResetPassword() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState(\"\"); // 비밀번호 일치확인\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [correctpassword, setcorrectpassword] = useState(false);\r\n  const passwordType = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,20}$/;\r\n\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    if (passwordType.test(e.target.password.value)) {\r\n      if (password === confirmPassword) {\r\n        resetpasswordapi(\r\n          {\r\n            userPassword: e.target.password.value,\r\n          },\r\n          location.search.slice(4)\r\n        ).then(() => history.push(\"/\"));\r\n      } else {\r\n        alert(\"비밀번호가 일치하지 않습니다\");\r\n      }\r\n    } else {\r\n      alert(\"비밀번호 양식을 확인해주세요\");\r\n    }\r\n  };\r\n\r\n  const onChangePassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    passwordType.test(e.target.value)\r\n      ? setcorrectpassword(false)\r\n      : setcorrectpassword(true);\r\n    setPassword(e.target.value);\r\n  };\r\n  const onChangeConfirmPassword = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(e.target.value);\r\n  };\r\n\r\n  const uncorrectstyle: CSSProperties = {\r\n    border: password !== confirmPassword ? \"4px solid var(--main-color)\" : \"\",\r\n  };\r\n\r\n  const commentpassword: CSSProperties = {\r\n    display: correctpassword ? \"block\" : \"none\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Login-body\">\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\r\n          integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        <form className=\"form-signin\" id=\"form-login\" onSubmit={onSubmit}>\r\n          <h1 className=\"h3 mb-3 font-weight-normal\">새 비밀번호 입력</h1>\r\n\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"비밀번호\"\r\n            required\r\n            autoFocus\r\n            onChange={onChangePassword}\r\n            style={uncorrectstyle}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            id=\"password-check\"\r\n            className=\"form-control\"\r\n            placeholder=\"비밀번호 확인\"\r\n            required\r\n            onChange={onChangeConfirmPassword}\r\n            style={uncorrectstyle}\r\n          />\r\n          <div style={commentpassword}>\r\n            비밀번호는 영어,숫자포함 8자에서 20자사이입니다\r\n          </div>\r\n\r\n          <button className=\"btn-login\" type=\"submit\">\r\n            비밀번호 찾기\r\n          </button>\r\n          <div className=\"find\"></div>\r\n          <p className=\"mt-5 mb-3 text-muted\">&copy; 2022</p>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Index from \"./containers/Index\";\r\nimport Login from \"./containers/Login\";\r\nimport Regist from \"./containers/Regist\";\r\nimport OldProject from \"./containers/OldProject\";\r\nimport Project from \"./containers/Project\";\r\nimport NewProject from \"./containers/NewProject\";\r\nimport Emaildone from \"./containers/Emaildone\";\r\nimport JoinProject from \"./containers/JoinProject\";\r\nimport FindId from \"./containers/FindId\";\r\nimport FindPassword from \"./containers/FindPassword\";\r\nimport ResetPassword from \"./containers/ResetPassword\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"All\">\r\n      <Route path=\"/\" exact component={Index} />\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/regist\" component={Regist} />\r\n      <Route path=\"/oldproject\" component={OldProject} />\r\n      <Route path=\"/project\" component={Project} />\r\n      <Route path=\"/newproject\" component={NewProject} />\r\n      <Route path=\"/done\" component={Emaildone} />\r\n      <Route path=\"/joinproject\" component={JoinProject} />\r\n      <Route path=\"/findid\" component={FindId} />\r\n      <Route path=\"/findpassword\" component={FindPassword} />\r\n      <Route path=\"/member/reset/password\" component={ResetPassword} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\nimport Userinfo from \"./User\";\r\nimport CalenderInfo from \"./Calendar/reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  Userinfo,\r\n  CalenderInfo,\r\n});\r\n\r\nexport default rootReducer;\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./module\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}